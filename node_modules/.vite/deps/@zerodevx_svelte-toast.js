import {
  tweened
} from "./chunk-OAZLIALC.js";
import "./chunk-NY4PIGM7.js";
import {
  onDestroy,
  onMount
} from "./chunk-V3G22LHU.js";
import {
  flip
} from "./chunk-42TGXZTB.js";
import {
  linear
} from "./chunk-6VDN6FZD.js";
import {
  fade,
  fly
} from "./chunk-53VUOSCH.js";
import {
  writable
} from "./chunk-APBM3L2J.js";
import {
  animate,
  append_styles,
  attr_effect,
  child,
  child_frag,
  class_name_effect,
  class_toggle,
  close,
  close_frag,
  comment,
  component,
  each_keyed,
  event,
  html,
  if_block,
  in_fn,
  init,
  open,
  out,
  prop,
  sibling,
  spread_props,
  store_get,
  stringify,
  template,
  unsubscribe_on_destroy
} from "./chunk-BXDKC2M6.js";
import "./chunk-UUFBZM2J.js";
import {
  deep_read,
  get,
  mark_module_end,
  mark_module_start,
  mutable_source,
  pop,
  pre_effect,
  push,
  render_effect,
  set,
  untrack,
  unwrap,
  validate_component,
  validate_dynamic_component,
  validate_each_keys,
  validate_store
} from "./chunk-NEQIOBHS.js";
import "./chunk-PLGELRID.js";
import "./chunk-LMPIC3TG.js";
import "./chunk-M5VR6CAA.js";

// node_modules/.pnpm/@zerodevx+svelte-toast@0.9.5_svelte@5.0.0-next.68/node_modules/@zerodevx/svelte-toast/stores.js
var defaults = {
  duration: 4e3,
  initial: 1,
  next: 0,
  pausable: false,
  dismissable: true,
  reversed: false,
  intro: { x: 256 }
};
function createToast() {
  const { subscribe, update } = writable(new Array());
  const options = {};
  let count = 0;
  function _obj(obj) {
    return obj instanceof Object;
  }
  function _init(target = "default", opts = {}) {
    options[target] = opts;
    return options;
  }
  function push2(msg, opts) {
    const param = {
      target: "default",
      ..._obj(msg) ? (
        /** @type {SvelteToastOptions} */
        msg
      ) : { ...opts, msg }
    };
    const conf = options[param.target] || {};
    const entry = {
      ...defaults,
      ...conf,
      ...param,
      theme: { ...conf.theme, ...param.theme },
      classes: [...conf.classes || [], ...param.classes || []],
      id: ++count
    };
    update((n) => entry.reversed ? [...n, entry] : [entry, ...n]);
    return count;
  }
  function pop2(id) {
    update((n) => {
      if (!n.length || id === 0)
        return [];
      if (typeof id === "function")
        return n.filter((i) => id(i));
      if (_obj(id))
        return n.filter(
          /** @type {SvelteToastOptions[]} i */
          (i) => i.target !== id.target
        );
      const found = id || Math.max(...n.map((i) => i.id));
      return n.filter((i) => i.id !== found);
    });
  }
  function set2(id, opts) {
    const param = _obj(id) ? id : { ...opts, id };
    update((n) => {
      const idx = n.findIndex((i) => i.id === param.id);
      if (idx > -1) {
        n[idx] = { ...n[idx], ...param };
      }
      return n;
    });
  }
  return { subscribe, push: push2, pop: pop2, set: set2, _init };
}
var toast = createToast();

// node_modules/.pnpm/@zerodevx+svelte-toast@0.9.5_svelte@5.0.0-next.68/node_modules/@zerodevx/svelte-toast/ToastItem.svelte
mark_module_start(ToastItem);
var frag_3 = template(`<div class="_toastBtn pe svelte-95rq8t" role="button" tabindex="0"></div>`);
var frag = template(`<div role="status" class="_toastItem svelte-95rq8t"><div class="_toastMsg svelte-95rq8t"><!></div> <!> <progress class="_toastBar svelte-95rq8t"></progress></div>`);
function ToastItem($$anchor, $$props) {
  if (new.target === ToastItem)
    throw new Error("Instantiating a component with `new` is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information");
  push($$props, false, ToastItem);
  const $$subscriptions = {};
  unsubscribe_on_destroy($$subscriptions);
  const $progress = () => (validate_store(progress, "progress"), store_get(progress, "$progress", $$subscriptions));
  let item = prop($$props, "item", 4);
  let next = mutable_source(item().initial);
  let prev = mutable_source(get(next));
  let paused = mutable_source(false);
  let cprops = mutable_source({});
  let unlisten;
  const progress = tweened(item().initial, { duration: item().duration, easing: linear });
  function close2() {
    toast.pop(item().id);
  }
  function autoclose() {
    if ($progress() === 1 || $progress() === 0)
      close2();
  }
  function pause() {
    if (!get(paused) && $progress() !== get(next)) {
      progress.set($progress(), { duration: 0 });
      set(paused, true);
    }
  }
  function resume() {
    if (get(paused)) {
      const d = (
        /** @type {any} */
        item().duration
      );
      const duration = d - d * (($progress() - get(prev)) / (get(next) - get(prev)));
      progress.set(get(next), { duration }).then(autoclose);
      set(paused, false);
    }
  }
  function check(prop2, kind = "undefined") {
    return typeof prop2 === kind;
  }
  function listen(d = document) {
    if (check(d.hidden))
      return;
    const handler = () => d.hidden ? pause() : resume();
    const name = "visibilitychange";
    d.addEventListener(name, handler);
    unlisten = () => d.removeEventListener(name, handler);
    handler();
  }
  onMount(listen);
  onDestroy(() => {
    if (check(item().onpop, "function")) {
      item().onpop(item().id);
    }
    unlisten && unlisten();
  });
  pre_effect(() => {
    deep_read(item());
    untrack(() => {
      if (!check(item().progress)) {
        item(item().next = item().progress, true);
      }
    });
  });
  pre_effect(() => {
    get(next), deep_read(item()), $progress();
    untrack(() => {
      if (get(next) !== item().next) {
        set(next, item().next);
        set(prev, $progress());
        set(paused, false);
        progress.set(get(next)).then(autoclose);
      }
    });
  });
  pre_effect(() => {
    deep_read(item());
    untrack(() => {
      if (item().component) {
        const { props = {}, sendIdTo } = item().component;
        set(cprops, {
          ...props,
          ...sendIdTo && { [sendIdTo]: item().id }
        });
      }
    });
  });
  init();
  var div = open($$anchor, true, frag);
  var div_1 = child(div);
  var node = child(div_1);
  var node_3 = sibling(sibling(div_1, true));
  var progress_1 = sibling(sibling(node_3, true));
  var progress_1_value;
  render_effect(() => {
    class_toggle(div, "pe", item().pausable);
    class_toggle(div_1, "pe", item().component);
    if (progress_1_value !== (progress_1_value = $progress())) {
      progress_1.value = progress_1_value;
    }
  });
  event(
    "mouseenter",
    div,
    () => {
      if (item().pausable)
        pause();
    },
    false
  );
  event("mouseleave", div, resume, false);
  if_block(
    node,
    () => item().component,
    ($$anchor2) => {
      var fragment = comment($$anchor2);
      var node_1 = child_frag(fragment);
      component(node_1, () => item().component.src, ($$component) => {
        validate_dynamic_component(() => {
          validate_component($$component)(node_1, spread_props(() => get(cprops)));
        });
      });
      close_frag($$anchor2, fragment);
    },
    ($$anchor2) => {
      var fragment_1 = comment($$anchor2);
      var node_2 = child_frag(fragment_1);
      html(node_2, () => item().msg, false);
      close_frag($$anchor2, fragment_1);
    }
  );
  if_block(
    node_3,
    () => item().dismissable,
    ($$anchor2) => {
      var div_2 = open($$anchor2, true, frag_3);
      event("click", div_2, close2, false);
      event(
        "keydown",
        div_2,
        (e) => {
          if (e instanceof KeyboardEvent && ["Enter", " "].includes(e.key))
            close2();
        },
        false
      );
      close($$anchor2, div_2);
    },
    null
  );
  close($$anchor, div);
  append_styles($$anchor, "svelte-95rq8t", "\n._toastItem.svelte-95rq8t {\n  width: var(--toastWidth, 16rem);\n  height: var(--toastHeight, auto);\n  min-height: var(--toastMinHeight, 3.5rem);\n  margin: var(--toastMargin, 0 0 0.5rem 0);\n  padding: var(--toastPadding, 0);\n  background: var(--toastBackground, rgba(66, 66, 66, 0.9));\n  color: var(--toastColor, #fff);\n  box-shadow: var(\n    --toastBoxShadow,\n    0 4px 6px -1px rgba(0, 0, 0, 0.1),\n    0 2px 4px -1px rgba(0, 0, 0, 0.06)\n  );\n  border: var(--toastBorder, none);\n  border-radius: var(--toastBorderRadius, 0.125rem);\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  overflow: hidden;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n}\n._toastMsg.svelte-95rq8t {\n  padding: var(--toastMsgPadding, 0.75rem 0.5rem);\n  flex: 1 1 0%;\n}\n.pe.svelte-95rq8t,\n._toastMsg:where(.svelte-95rq8t) a {\n  pointer-events: auto;\n}\n._toastBtn.svelte-95rq8t {\n  width: var(--toastBtnWidth, 2rem);\n  height: var(--toastBtnHeight, 100%);\n  cursor: pointer;\n  outline: none;\n}\n._toastBtn.svelte-95rq8t::after {\n  content: var(--toastBtnContent, 'âœ•');\n  font: var(--toastBtnFont, 1rem sans-serif);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n._toastBar.svelte-95rq8t {\n  top: var(--toastBarTop, auto);\n  right: var(--toastBarRight, auto);\n  bottom: var(--toastBarBottom, 0);\n  left: var(--toastBarLeft, 0);\n  height: var(--toastBarHeight, 6px);\n  width: var(--toastBarWidth, 100%);\n  position: absolute;\n  display: block;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  border: none;\n  background: transparent;\n  pointer-events: none;\n}\n._toastBar.svelte-95rq8t::-webkit-progress-bar {\n  background: transparent;\n}\n/* `--toastProgressBackground` renamed to `--toastBarBackground`; override included for backward compatibility */\n._toastBar.svelte-95rq8t::-webkit-progress-value {\n  background: var(--toastProgressBackground, var(--toastBarBackground, rgba(33, 150, 243, 0.75)));\n}\n._toastBar.svelte-95rq8t::-moz-progress-bar {\n  background: var(--toastProgressBackground, var(--toastBarBackground, rgba(33, 150, 243, 0.75)));\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9hc3RJdGVtLnN2ZWx0ZSIsIm1hcHBpbmdzIjoiQUFtSE0iLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiVG9hc3RJdGVtLnN2ZWx0ZSJdfQ== */");
  pop();
}
ToastItem.filename = ".../@zerodevx/svelte-toast/ToastItem.svelte";
mark_module_end();

// node_modules/.pnpm/@zerodevx+svelte-toast@0.9.5_svelte@5.0.0-next.68/node_modules/@zerodevx/svelte-toast/SvelteToast.svelte
mark_module_start(SvelteToast);
var each_block = template(`<li><!></li>`);
var frag2 = template(`<ul class="_toastContainer svelte-1u812xz"></ul>`);
function SvelteToast($$anchor, $$props) {
  if (new.target === SvelteToast)
    throw new Error("Instantiating a component with `new` is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information");
  push($$props, false, SvelteToast);
  const $$subscriptions = {};
  unsubscribe_on_destroy($$subscriptions);
  const $toast = () => (validate_store(toast, "toast"), store_get(toast, "$toast", $$subscriptions));
  let options = prop($$props, "options", 8, () => ({}));
  let target = prop($$props, "target", 0, "default");
  let items = mutable_source([]);
  function getCss(theme) {
    return theme ? Object.keys(theme).reduce((a, c) => `${a}${c}:${theme[c]};`, "") : void 0;
  }
  pre_effect(() => {
    deep_read(target()), deep_read(options());
    untrack(() => {
      toast._init(target(), options());
    });
  });
  pre_effect(() => {
    $toast(), deep_read(target());
    untrack(() => {
      set(items, $toast().filter((i) => i.target === target()));
    });
  });
  init();
  var ul = open($$anchor, true, frag2);
  validate_each_keys(() => get(items), (item, $$index) => {
    return unwrap(item).id;
  });
  each_keyed(
    ul,
    () => get(items),
    13,
    (item, $$index) => {
      return unwrap(item).id;
    },
    ($$anchor2, item, $$index) => {
      var li = open($$anchor2, true, each_block);
      in_fn(li, () => fly, () => unwrap(item).intro, false);
      out(li, () => fade, null, false);
      animate(li, () => flip, () => ({ duration: 200 }));
      var node = child(li);
      class_name_effect(li, () => {
        var _a;
        return `${stringify((_a = unwrap(item).classes) == null ? void 0 : _a.join(" "))} svelte-1u812xz`;
      });
      attr_effect(li, "style", () => getCss(unwrap(item).theme));
      validate_component(ToastItem)(node, {
        get item() {
          return unwrap(item);
        }
      });
      close($$anchor2, li);
    },
    null
  );
  close($$anchor, ul);
  append_styles($$anchor, "svelte-1u812xz", "\n._toastContainer.svelte-1u812xz {\n  top: var(--toastContainerTop, 1.5rem);\n  right: var(--toastContainerRight, 2rem);\n  bottom: var(--toastContainerBottom, auto);\n  left: var(--toastContainerLeft, auto);\n  position: fixed;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  pointer-events: none;\n  z-index: var(--toastContainerZIndex, 9999);\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3ZlbHRlVG9hc3Quc3ZlbHRlIiwibWFwcGluZ3MiOiJBQXNDTSIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJTdmVsdGVUb2FzdC5zdmVsdGUiXX0= */");
  pop();
}
SvelteToast.filename = ".../@zerodevx/svelte-toast/SvelteToast.svelte";
mark_module_end();
export {
  SvelteToast,
  toast
};
//# sourceMappingURL=@zerodevx_svelte-toast.js.map
