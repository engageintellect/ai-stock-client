"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertRenderTag = void 0;
const common_1 = require("./common");
/** Convert for RenderTag */
function convertRenderTag(node, parent, ctx) {
    const mustache = Object.assign({ type: "SvelteRenderTag", callee: null, arguments: [], parent }, ctx.getConvertLocation(node));
    const calleeRange = (0, common_1.getWithLoc)(node.expression);
    const closeParenIndex = ctx.code.indexOf(")", node.arguments.length
        ? (0, common_1.getWithLoc)(node.arguments[node.arguments.length - 1]).end
        : calleeRange.end);
    ctx.scriptLet.addExpressionFromRange([calleeRange.start, closeParenIndex + 1], mustache, null, (expression) => {
        mustache.callee = expression.callee;
        mustache.callee.parent = mustache;
        for (const argument of expression.arguments) {
            mustache.arguments.push(argument);
            argument.parent = mustache;
        }
    });
    const atRenderStart = ctx.code.indexOf("@render", mustache.range[0]);
    ctx.addToken("MustacheKeyword", {
        start: atRenderStart,
        end: atRenderStart + 7,
    });
    return mustache;
}
exports.convertRenderTag = convertRenderTag;
